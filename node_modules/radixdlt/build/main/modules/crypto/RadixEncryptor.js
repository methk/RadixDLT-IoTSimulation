"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var RadixECIES_1 = tslib_1.__importDefault(require("./RadixECIES"));
var RadixAtomModel_1 = require("../RadixAtomModel");
var RadixEncryptor = /** @class */ (function (_super) {
    tslib_1.__extends(RadixEncryptor, _super);
    function RadixEncryptor(json) {
        var _this = _super.call(this, json) || this;
        _this.serializationProperties.push('protectors');
        return _this;
    }
    RadixEncryptor.prototype.getKey = function (accessor) {
        var e_1, _a;
        try {
            for (var _b = tslib_1.__values(this.protectors), _c = _b.next(); !_c.done; _c = _b.next()) {
                var protector = _c.value;
                try {
                    var decryptedPrivateKey = RadixECIES_1.default.decrypt(accessor.keyPair.getPrivate(), protector.data);
                    return decryptedPrivateKey;
                }
                catch (e) {
                    // console.log('Could not decrypt: ', e)
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        throw new Error('Could not decrypt any protectors');
    };
    RadixEncryptor.prototype.decrypt = function (data, accessor) {
        var privateKey = this.getKey(accessor);
        return RadixECIES_1.default.decrypt(privateKey, data.data);
    };
    RadixEncryptor.SERIALIZER = 105401064;
    return RadixEncryptor;
}(RadixAtomModel_1.RadixBasicContainer));
exports.default = RadixEncryptor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhFbmNyeXB0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kdWxlcy9jcnlwdG8vUmFkaXhFbmNyeXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0VBQXFDO0FBRXJDLG9EQUFrRjtBQUVsRjtJQUE0QywwQ0FBbUI7SUFLM0Qsd0JBQVksSUFBYTtRQUF6QixZQUNJLGtCQUFNLElBQUksQ0FBQyxTQUdkO1FBREcsS0FBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQTs7SUFDbkQsQ0FBQztJQUVELCtCQUFNLEdBQU4sVUFBTyxRQUFzQjs7O1lBQ3pCLEtBQXNCLElBQUEsS0FBQSxpQkFBQSxJQUFJLENBQUMsVUFBVSxDQUFBLGdCQUFBLDRCQUFFO2dCQUFsQyxJQUFJLFNBQVMsV0FBQTtnQkFDZCxJQUFJO29CQUNBLElBQUksbUJBQW1CLEdBQUcsb0JBQVUsQ0FBQyxPQUFPLENBQ3hDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLEVBQzdCLFNBQVMsQ0FBQyxJQUFJLENBQ2pCLENBQUE7b0JBQ0QsT0FBTyxtQkFBbUIsQ0FBQTtpQkFDN0I7Z0JBQUMsT0FBTyxDQUFDLEVBQUU7b0JBQ1Isd0NBQXdDO2lCQUMzQzthQUNKOzs7Ozs7Ozs7UUFFRCxNQUFNLElBQUksS0FBSyxDQUFDLGtDQUFrQyxDQUFDLENBQUE7SUFDdkQsQ0FBQztJQUVELGdDQUFPLEdBQVAsVUFBUSxJQUFpQixFQUFFLFFBQXNCO1FBQzdDLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7UUFFdEMsT0FBTyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3BELENBQUM7SUE5Qk0seUJBQVUsR0FBRyxTQUFTLENBQUE7SUErQmpDLHFCQUFDO0NBQUEsQUFoQ0QsQ0FBNEMsb0NBQW1CLEdBZ0M5RDtrQkFoQ29CLGNBQWMifQ==