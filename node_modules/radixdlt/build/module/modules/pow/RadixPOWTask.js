import RadixPOW from './RadixPOW';
export default class RadixPOWTask {
    constructor(magic, seed, target) {
        this.magic = magic;
        this.seed = seed;
        this.target = target;
        this.pow = new RadixPOW(magic, seed);
        console.log(target.toString('hex'));
    }
    computePow() {
        return new Promise((resolve, reject) => {
            this.attemptPow(resolve);
        });
    }
    // attemptPow(callback: Function) {
    //    const hash = this.pow.getHash()
    //    if (this.meetsTarget(hash)) {
    //        console.log(hash.toString('hex'))
    //        callback(this.pow)
    //    }
    //    else {
    //        this.pow.incrementNonce()
    //        // Non-blocking
    //        setTimeout(() => {
    //            this.attemptPow(callback)
    //        }, 0)
    //    }
    // }
    attemptPow(callback) {
        for (let i = 0; i < 100; i++) {
            this.pow.incrementNonce();
            const hash = this.pow.getHash();
            if (this.meetsTarget(hash)) {
                console.log(hash.toString('hex'));
                setTimeout(() => {
                    callback(this.pow);
                });
                return;
            }
        }
        // Non-blocking
        setTimeout(() => {
            this.attemptPow(callback);
        }, 0);
    }
    meetsTarget(hash) {
        return hash.compare(this.target) < 0;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhQT1dUYXNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvcG93L1JhZGl4UE9XVGFzay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFFBQVEsTUFBTSxZQUFZLENBQUE7QUFFakMsTUFBTSxDQUFDLE9BQU8sT0FBTyxZQUFZO0lBRzdCLFlBQ2EsS0FBYSxFQUNiLElBQVksRUFDWixNQUFjO1FBRmQsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUNiLFNBQUksR0FBSixJQUFJLENBQVE7UUFDWixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBRXZCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFBO1FBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7SUFFRCxVQUFVO1FBQ04sT0FBTyxJQUFJLE9BQU8sQ0FBVyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQzVCLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELG1DQUFtQztJQUNuQyxxQ0FBcUM7SUFDckMsbUNBQW1DO0lBQ25DLDJDQUEyQztJQUMzQyw0QkFBNEI7SUFDNUIsT0FBTztJQUNQLFlBQVk7SUFDWixtQ0FBbUM7SUFFbkMseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1Qix1Q0FBdUM7SUFDdkMsZUFBZTtJQUNmLE9BQU87SUFDUCxJQUFJO0lBRUosVUFBVSxDQUFDLFFBQWtCO1FBQ3pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDMUIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtZQUN6QixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFBO1lBRS9CLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUE7Z0JBRWpDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7b0JBQ1osUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtnQkFDdEIsQ0FBQyxDQUFDLENBQUE7Z0JBRUYsT0FBTTthQUNUO1NBQ0o7UUFFRCxlQUFlO1FBQ2YsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDN0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ1QsQ0FBQztJQUVELFdBQVcsQ0FBQyxJQUFZO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ3hDLENBQUM7Q0FDSiJ9